The `2-matrix_divided.py` Python module provides basic division function that
operates on a integer or float matrix and a non zero divisor 
Here are a few examples of how to use the function in `2-matrix_divided.py`:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 7, 3], [4, 5, 8]], 3)
[[0.33, 2.33, 1.0], [1.33, 1.67, 2.67]]

>>> matrix_divided([[3, 6], [6, 12]], 2.0)
[[1.5, 3.0], [3.0, 6.0]]

>>> matrix_divided([[2.0], [6]], 2.0)
[[1.0], [3.0]]

>>> matrix_divided([[2.0], [6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[2.0], [6]], 'b')
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([2.0, 6], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2.0], 9], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([2.0, 6], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2.0, 5], [5]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
