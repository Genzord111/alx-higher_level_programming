# test_base_geometry.txt

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Test instantiation
>>> bg = BaseGeometry()
>>> type(bg) == BaseGeometry
True

# Test area method
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# Test integer_validator method with valid inputs
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

# Test integer_validator with non-integer input
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

# Test integer_validator with zero
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

# Test integer_validator with negative number
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

# Test integer_validator with float
>>> bg.integer_validator("average", 7.5)
Traceback (most recent call last):
    ...
TypeError: average must be an integer

# Test integer_validator with None
>>> bg.integer_validator("value", None)
Traceback (most recent call last):
    ...
TypeError: value must be an integer

# Test that methods exist
>>> hasattr(BaseGeometry, 'area')
True
>>> hasattr(BaseGeometry, 'integer_validator')
True
